<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- autowire byName -->
	<!-- <bean id="b" class="spring.tutorials.autowiring.byName._01.B"></bean> -->
	<!-- if you change the name to b1 it would be an error -->
	<!-- <bean id="b1" class="spring.tutorials.autowiring.byName._01.B"></bean> -->
	<!-- <bean id="a" class="spring.tutorials.autowiring.byName._01.A" autowire="byName"></bean> -->
	
	<!-- autowire byType -->
<!-- 	<bean id="b1" class="spring.tutorials.autowiring.byName._01.B"></bean> -->
	<!-- But, if you have multiple bean of one type, it will not work and throw exception. -->
	<!-- <bean id="b2" class="spring.tutorials.autowiring.byName._01.B"></bean> -->
<!-- 	<bean id="a" class="spring.tutorials.autowiring.byName._01.A" autowire="byType"></bean> -->
	
	
<!-- 	<bean id="theStage" class="spring.pag067.Stage" factory-method="getInstance"></bean> -->
	
<!-- 	<bean id="saxophone" class="spring.pag049.Saxophone"></bean> -->
<!-- 	<bean id="kenny" class="spring.pag068.Instrumentalist" init-method="tuneInstrument" destroy-method="cleanInstrument"> -->
<!-- 		<property name="song" value="Jingle Bells" /> -->
<!-- 		<property name="instrument" ref="saxophone" /> -->
<!-- 	</bean> -->
	
	<!-- 3.1.1 Abstracting a base bean type -->
	<bean id="saxophone" class="spring.pag049.Saxophone"></bean>
	<bean id="guitar" class="spring.pag049.Guitar"></bean>
	
	<bean id="kenny" class="spring.pag068.Instrumentalist">
		<property name="song" value="Jingle Bells"></property>
		<property name="age" value="39"></property>
		<property name="instrument" ref="saxophone"></property>
	</bean>
	
	<bean id="david" class="spring.pag068.Instrumentalist">
		<property name="song" value="Jingle Bells"></property>
		<property name="age" value="39"></property>
		<property name="instrument" ref="saxophone"></property>
	</bean>
	<!-- Solution -->
	<bean id="baseSaxophonist" class="spring.pag068.Instrumentalist" abstract="true">
		<property name="instrument" ref="saxophone" />
		<property name="song" value="Jingle Bells" />
		<property name="age" value="0"></property>
	</bean>
	<!-- the redundant is gone -->
	<bean id="pablo" parent="baseSaxophonist">
	</bean>
	<bean id="pedro" parent="baseSaxophonist">
	</bean>		
	
	<!-- Overriding inhereting properties -->
	<bean id="marco" parent="baseSaxophonist">
		<property name="song" value="El triste" />
		<property name="age" value="20"></property>
	</bean>
	
	<!-- Abstracting common properties -->
	<bean id="basePerformer" abstract="true">
		<property name="song" value="Somewhere ober the rainbow"></property>
	</bean>
	
	<bean id="stevie" class="spring.pag068.Instrumentalist" parent="basePerformer">
		<property name="instrument" ref="guitar"></property>
	</bean>
	
	<!-- Basic method replacement -->
	<!--Example 1  -->
<!-- 	<bean id="harry" class="spring.pag080.Magician"> -->
<!-- 		<property name="magicWords" value="A bra cadabra"></property> -->
<!-- 		<property name="magicBox" ref="magicBox"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="magicBox" class="spring.pag080.MagicBoxImpl"></bean> -->
	
	<!-- Example 2 -->
	<bean id="harry" class="spring.pag080.Magician">
		<property name="magicWords" value="A bra cadabra"></property>
		<property name="magicBox" ref="magicBox"></property>
	</bean>
	
	<bean id="magicBox" class="spring.pag080.MagicBoxImpl">
		<replaced-method name="getContents" replacer="tigerReplacer"/>
	</bean>
	<bean id="tigerReplacer" class="spring.pag083.TigerReplacer" />
	
	<bean id="esteban" class="spring.pag084.Instrumentalist">
		<lookup-method name="getInstrument" bean="guitar"/>
		<property name="song" value="Greensleeves"/>
	</bean>
	
</beans>